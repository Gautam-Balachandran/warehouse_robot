<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [waffle, waffle_pi]"/>
  <arg name="use_robot_name" default="om_with_tb3"/>

  <!-- These are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="verbose" default="false"/>

  <rosparam file="$(find open_manipulator_with_tb3_gazebo)/config/gazebo_controller.yaml" command="load" />

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find warehouse_robot)data/worlds/ariac.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="verbose" value="$(arg verbose)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <group ns = "$(arg use_robot_name)">
    <param name="robot_description"
      command="$(find xacro)/xacro --inorder '$(find open_manipulator_with_tb3_description)/urdf/open_manipulator_with_tb3_$(arg model).urdf.xacro'"/>

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
       <param name="publish_frequency" type="double" value="100.0" />
       <param name="tf_prefix" value="$(arg use_robot_name)" />
    </node>

    <node pkg="gazebo_ros" type="spawn_model" name="urdf_spawner" respawn="false" output="screen"
       args="-urdf -model $(arg use_robot_name) -x 3.0 -y 6.5 -Y 0.785 -J joint2 -1.5707 -J joint3 1.37 -J joint4 0.2258 -param robot_description"/>
  </group>

  <!-- ros_control robotis manipulator launch file -->
  <include file="$(find open_manipulator_with_tb3_gazebo)/launch/joint_controller.launch">
    <arg name="use_robot_name" value="$(arg use_robot_name)"/>
  </include>

  <!-- Arguments -->

<arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
<arg name="set_base_frame" default="om_with_tb3/base_footprint"/>
<arg name="set_odom_frame" default="om_with_tb3/odom"/>
<arg name="set_map_frame"  default="map"/>
<!-- <remap from = "om_with_tb3/scan" to= "scan" /> -->

<!-- Gmapping -->
<node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" output="screen"
  args="scan:=om_with_tb3/scan">
  <param name="base_frame" value="$(arg set_base_frame)"/>
  <param name="odom_frame" value="$(arg set_odom_frame)"/>
  <param name="map_frame"  value="$(arg set_map_frame)"/>
  <param name="map_update_interval" value="2.0"/>
  <param name="maxUrange" value="3.0"/>
  <param name="sigma" value="0.05"/>
  <param name="kernelSize" value="1"/>
  <param name="lstep" value="0.05"/>
  <param name="astep" value="0.05"/>
  <param name="iterations" value="5"/>
  <param name="lsigma" value="0.075"/>
  <param name="ogain" value="3.0"/>
  <param name="lskip" value="0"/>
  <param name="minimumScore" value="50"/>
  <param name="srr" value="0.1"/>
  <param name="srt" value="0.2"/>
  <param name="str" value="0.1"/>
  <param name="stt" value="0.2"/>
  <param name="linearUpdate" value="1.0"/>
  <param name="angularUpdate" value="0.2"/>
  <param name="temporalUpdate" value="0.5"/>
  <param name="resampleThreshold" value="0.5"/>
  <param name="particles" value="100"/>
  <param name="xmin" value="-10.0"/>
  <param name="ymin" value="-10.0"/>
  <param name="xmax" value="10.0"/>
  <param name="ymax" value="10.0"/>
  <param name="delta" value="0.05"/>
  <param name="llsamplerange" value="0.01"/>
  <param name="llsamplestep" value="0.01"/>
  <param name="lasamplerange" value="0.005"/>
  <param name="lasamplestep" value="0.005"/>
</node>
</launch>
